[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="SpatialMaterial" id=4]
flags_unshaded = true

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode unshaded, cull_disabled;

uniform vec4 color : hint_color = vec4( 0.0, 0.0, 0.0, 1.0 );
uniform float bias = -1.0;
uniform float thickness = 0.02;

varying mat4 camera_matrix;

void vertex( )
{
	VERTEX += NORMAL * thickness;
	camera_matrix = CAMERA_MATRIX;
}

void fragment( )
{
	vec4 screen_pixel_vertex = vec4( vec3( SCREEN_UV, textureLod( DEPTH_TEXTURE, SCREEN_UV, 0.0 ).x ) * 2.0 - 1.0, 1.0 );
	vec4 screen_pixel_coord = INV_PROJECTION_MATRIX * screen_pixel_vertex;
	screen_pixel_coord.xyz /= screen_pixel_coord.w;
	float depth = -screen_pixel_coord.z;

	float z = -VERTEX.z;

	ALBEDO = color.rgb;
	ALPHA = color.a * float( depth < z + bias );
	DEPTH = 0.00001;
}

"

[resource]
render_priority = 127
next_pass = SubResource( 4 )
shader = SubResource( 2 )
shader_param/color = Color( 0.243137, 1, 0, 1 )
shader_param/bias = 1.0
shader_param/thickness = 0.02
